/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TravelBooking,
  TravelBookingInterface,
} from "../../../src/contracts/TravelBooking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "travelId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "traveler",
        type: "address",
      },
    ],
    name: "BookingConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "travelId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "TravelCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_travelId",
        type: "uint256",
      },
    ],
    name: "bookTravel",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxParticipants",
        type: "uint256",
      },
    ],
    name: "createTravel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_travelId",
        type: "uint256",
      },
    ],
    name: "getTravel",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxParticipants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentParticipants",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserBookings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "travelCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "travels",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxParticipants",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentParticipants",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userBookings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160005561001f33610024565b610076565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610deb806100856000396000f3fe6080604052600436106100915760003560e01c8063c5de628611610059578063c5de628614610155578063cebc046f14610175578063d653d1fc14610197578063e3a4d3a2146101aa578063f2fde38b146101ca57600080fd5b80634c72c96d1461009657806363738555146100b8578063715018a6146100f45780638da5cb5b1461010957806390d6348014610131575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610a50565b6101ea565b005b3480156100c457600080fd5b506100d86100d3366004610ac4565b6102fa565b6040516100eb9796959493929190610b23565b60405180910390f35b34801561010057600080fd5b506100b6610449565b34801561011557600080fd5b506001546040516001600160a01b0390911681526020016100eb565b34801561013d57600080fd5b5061014760045481565b6040519081526020016100eb565b34801561016157600080fd5b506100d8610170366004610ac4565b61045d565b34801561018157600080fd5b5061018a61062e565b6040516100eb9190610b77565b6100b66101a5366004610ac4565b61068f565b3480156101b657600080fd5b506101476101c5366004610bd7565b610801565b3480156101d657600080fd5b506100b66101e5366004610c01565b610832565b6101f26108a8565b6004805490600061020283610c23565b90915550506040805160e08101825260045480825260208083018881528385018890526060840187905260808401869052600060a08501819052600160c086018190529381526002909252939020825181559251919291908201906102679082610cd3565b506040820151600282019061027c9082610cd3565b5060608201516003820155608082015160048083019190915560a0830151600583015560c0909201516006909101805460ff1916911515919091179055546040517faf54deefa292b0bdd487bee5bf556091d1b480700386d6bf6bde0156d225d8cd906102ec9087908690610d93565b60405180910390a250505050565b6002602052600090815260409020805460018201805491929161031c90610c4a565b80601f016020809104026020016040519081016040528092919081815260200182805461034890610c4a565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050908060020180546103aa90610c4a565b80601f01602080910402602001604051908101604052809291908181526020018280546103d690610c4a565b80156104235780601f106103f857610100808354040283529160200191610423565b820191906000526020600020905b81548152906001019060200180831161040657829003601f168201915b505050506003830154600484015460058501546006909501549394919390925060ff1687565b6104516108a8565b61045b6000610902565b565b60006060806000806000806000600260008a81526020019081526020016000206040518060e0016040529081600082015481526020016001820180546104a290610c4a565b80601f01602080910402602001604051908101604052809291908181526020018280546104ce90610c4a565b801561051b5780601f106104f05761010080835404028352916020019161051b565b820191906000526020600020905b8154815290600101906020018083116104fe57829003601f168201915b5050505050815260200160028201805461053490610c4a565b80601f016020809104026020016040519081016040528092919081815260200182805461056090610c4a565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c00151975097509750975097509750975050919395979092949650565b3360009081526003602090815260409182902080548351818402810184019094528084526060939283018282801561068557602002820191906000526020600020905b815481526020019060010190808311610671575b5050505050905090565b610697610954565b6000818152600260205260409020600681015460ff166106f55760405162461bcd60e51b815260206004820152601460248201527354726176656c206973206e6f742061637469766560601b60448201526064015b60405180910390fd5b806004015481600501541061073d5760405162461bcd60e51b815260206004820152600e60248201526d151c985d995b081a5cc8199d5b1b60921b60448201526064016106ec565b806003015434146107905760405162461bcd60e51b815260206004820152601860248201527f496e636f7272656374207061796d656e7420616d6f756e74000000000000000060448201526064016106ec565b6005810180549060006107a283610c23565b909155505033600081815260036020908152604080832080546001810182559084529183209091018590555184917f32a6eab1f4a0177609cc24472e391822aae8a497472601ef3f98523b4bc7bd3191a3506107fe6001600055565b50565b6003602052816000526040600020818154811061081d57600080fd5b90600052602060002001600091509150505481565b61083a6108a8565b6001600160a01b03811661089f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ec565b6107fe81610902565b6001546001600160a01b0316331461045b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ec565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600054036109a65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106ec565b6002600055565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109d457600080fd5b813567ffffffffffffffff808211156109ef576109ef6109ad565b604051601f8301601f19908116603f01168101908282118183101715610a1757610a176109ad565b81604052838152866020858801011115610a3057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610a6657600080fd5b843567ffffffffffffffff80821115610a7e57600080fd5b610a8a888389016109c3565b95506020870135915080821115610aa057600080fd5b50610aad878288016109c3565b949794965050505060408301359260600135919050565b600060208284031215610ad657600080fd5b5035919050565b6000815180845260005b81811015610b0357602081850181015186830182015201610ae7565b506000602082860101526020601f19601f83011685010191505092915050565b87815260e060208201526000610b3c60e0830189610add565b8281036040840152610b4e8189610add565b9150508560608301528460808301528360a083015282151560c083015298975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610baf57835183529284019291840191600101610b93565b50909695505050505050565b80356001600160a01b0381168114610bd257600080fd5b919050565b60008060408385031215610bea57600080fd5b610bf383610bbb565b946020939093013593505050565b600060208284031215610c1357600080fd5b610c1c82610bbb565b9392505050565b600060018201610c4357634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610c5e57607f821691505b602082108103610c7e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610cce57600081815260208120601f850160051c81016020861015610cab5750805b601f850160051c820191505b81811015610cca57828155600101610cb7565b5050505b505050565b815167ffffffffffffffff811115610ced57610ced6109ad565b610d0181610cfb8454610c4a565b84610c84565b602080601f831160018114610d365760008415610d1e5750858301515b600019600386901b1c1916600185901b178555610cca565b600085815260208120601f198616915b82811015610d6557888601518255948401946001909101908401610d46565b5085821015610d835787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000610da66040830185610add565b9050826020830152939250505056fea26469706673582212202c5aff9e48b89223e251d325badc00cad948a1b3aa9b18a24c46f25a8444cd3e64736f6c63430008130033";

type TravelBookingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TravelBookingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TravelBooking__factory extends ContractFactory {
  constructor(...args: TravelBookingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TravelBooking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TravelBooking__factory {
    return super.connect(runner) as TravelBooking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TravelBookingInterface {
    return new Interface(_abi) as TravelBookingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TravelBooking {
    return new Contract(address, _abi, runner) as unknown as TravelBooking;
  }
}
